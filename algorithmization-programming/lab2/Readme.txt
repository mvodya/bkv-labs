Таблицу кодировки кириллицы для Win1251 и набор файлов с текстами
взять из 1-й работы.

Задача - составить частотный словарь слов, используя набор файлов, в
количестве не более чем 256.

Программа должна считывать несколько (до 256) текстовых файлов, разбивая
текст на слова, и для каждого слова подсчитывать количество появлений в
тексте. Словоформы не анализировать, т.е. морфология не учитывается.
Слова с различными окончаниями (за счет падежа, числа или склонения)
считать разными.

Вход программы - список файлов, которые необходимо обработать.
Выход программы - ДВА ФАЙЛА, с частотными словарями, упорядоченными в
первом файле - по словам в алфавитном порядке,
во втором файле - по частоте (в порядке убывания).

Алгоритм должен быть однопроходным, без повторного считывания 
информации из файлов.

Использовать динамический массив структур вида

typedef struct word {
  int count;
  char *w;
} WORD;

WORD *words[] ;

При добавлении НОВОГО слова в массив использовать функцию malloc (читайте man !!!)
для создания новой структуры типа WORD, связанной с очередным указателем массива.
Всегда используйте sizeof для определения размера переменных или структур (strlen для строк).
Для передачи входа в программу используйте параметры функции main, - первый из них
содержит количество передаваемых имен файлов, второй является массивом указателей на
имена файлов.
Функцию для сравнения строк, содержащих кириллицу в кодировке cp1251 (win1251) нужно
реализовать отдельно.
Для сортировки использовать библиотечную функцию qsort.

